<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="identity-checklist">
  <?dbhtml stop-chunking?>
      <title>Checklist</title>
        <section xml:id="check-identity-01">
             <title>Check-Identity-01: Is user and group ownership of
             Identity configuration files set to keystone?</title>
             <para>Configuration files contain critical parameters and
             information required for smooth functioning of the
             component. If an unprivileged user, either intentionally or
             accidently modifies or deletes any of the parameters or the
             file itself then it would cause severe availability issue
             causing denial of service to the other end users. Thus user
             and group ownership of such critical configuration files
             must be set to that component owner.</para>
             <para>Run the following commands:</para>
<screen><prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/keystone.conf | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/keystone-paste.ini | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/policy.json | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/logging.conf | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/ssl/certs/signing_cert.pem | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/ssl/private/signing_key.pem | egrep "keystone keystone"</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%U %G" /etc/keystone/ssl/certs/ca.pem | egrep "keystone keystone"</userinput></screen>
             <para><emphasis role="bold">Pass:</emphasis> If user and
             group ownership of all these config files is set to
             keystone. The above commands show output of keystone
             keystone.</para>
             <para><emphasis role="bold">Fail:</emphasis> If the above
             commands does not return any output as the user or group
             ownership might have set to any user other than keystone.
             </para>
             <para>Recommended in:
             <xref linkend="identity-authentication-methods-internally-implemented-authentication-methods"/>
             </para>
        </section>
        <section xml:id="check-identity-02">
             <title>Check-Identity-02: Are strict permissions set for
             Identity configuration files?</title>
             <para>Similar to previous check, it is recommended to set
             strict access permissions for such configuration files.
             </para>
             <para>Run the following commands:</para>
<screen><prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/keystone.conf</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/keystone-paste.ini</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/policy.json</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/logging.conf</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/ssl/certs/signing_cert.pem</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/ssl/private/signing_key.pem</userinput>
<prompt>$</prompt> <userinput>stat -L -c "%a" /etc/keystone/ssl/certs/ca.pem</userinput></screen>
             <para><emphasis role="bold">Pass:</emphasis> If permissions
             are set to 640 or stricter.</para>
             <para><emphasis role="bold">Fail:</emphasis> If permissions
             are not set to atleast 640.</para>
             <para>Recommended in:
             <xref linkend="identity-authentication-methods-internally-implemented-authentication-methods"/>
             </para>
        </section>
        <section xml:id="check-identity-03">
             <title>Check-Identity-03: is SSL enabled for Identity?
             </title>
             <para>OpenStack components communicate with each other
             using various protocols and the communication might involve
             sensitive or confidential data. An attacker may try to
             eavesdrop on the channel in order to get access to
             sensitive information. Thus all the components must
             communicate with each other using a secured communication
             protocol like HTTPS.</para>
             <para><emphasis role="bold">Pass:</emphasis> If value of
             parameter <option>enable</option> under <literal>[ssl]</literal>
             section in
             <filename>/etc/keystone/keystone.conf</filename> is set to
             <literal>True</literal>.</para>
             <para><emphasis role="bold">Fail:</emphasis> If value of
             parameter <option>enable</option> under <literal>[ssl]</literal>
             section is not set to <literal>True</literal>.</para>
             <para>Recommended in:
             <xref linkend="secure_communication"/></para>
        </section>
        <section xml:id="check-identity-04">
             <title>Check-Identity-04: Does Identity use strong hashing
             algorithms for PKI tokens?</title>
             <para>MD5 is a weak and depreciated hashing algorithm. It
             can be cracked using bruteforce attack. Identity tokens are
             sensitive and need to be protected with a stronger
             hashing algorithm to prevent unauthorized disclosure and
             subsequent access.</para>
             <para><emphasis role="bold">Pass:</emphasis> If value of
             parameter <option>hash_algorithm</option> under
             <literal>[token]</literal> section in
             <filename>/etc/keystone/keystone.conf</filename> is set to
             SHA256.</para>
             <para><emphasis role="bold">Fail:</emphasis> If value of
             parameter <option>hash_algorithm</option> under
             <literal>[token]</literal>section is set to MD5.</para>
             <para>Recommended in:
             <xref linkend="identity-tokens"/></para>
        </section>
        <section xml:id="check-identity-05">
             <title>Check-Identity-05: Is value of parameter <option>
             max_request_body_size</option> set to default (114688)?
             </title>
             <para>The parameter <option>max_request_body_size</option>
             defines the
             maximum body size per request in bytes. If the maximum size
             is not defined, the attacker could craft an arbitary
             request of large size causing the service to crash and
             finally resulting in Denial Of Service attack. Assigning
             the maximum value ensures that any malicious oversized
             request gets blocked ensuring continued availability of the
             component.</para>
             <para><emphasis role="bold">Pass:</emphasis> If value of
             parameter <option>max_request_body_size</option> in
             <filename>/etc/keystone/keystone.conf</filename> is set to
             default (114688) or some reasonable value based on your
             environment.</para>
             <para><emphasis role="bold">Fail:</emphasis> If value of
             parameter <option>max_request_body_size</option> is not
             set.</para>
        </section>
        <section xml:id="check-identity-06">
             <title>Check-Identity-06: is admin token disabled in
             <filename>/etc/keystone/keystone.conf</filename>?</title>
             <para>Admin token is generally used to bootstrap Identity.
             This token is the most valuable Identity asset, which could
             be used to gain cloud admin privileges.</para>
             <para><emphasis role="bold">Pass:</emphasis> If
             <option>admin_token</option> under <literal>[DEFAULT]</literal>
             section in <filename>/etc/keystone/keystone.conf</filename>
             is disabled. And, AdminTokenAuthMiddleware under
             <literal>[filter:admin_token_auth]</literal> is deleted
             from <filename>/etc/keystone/keystone-paste.ini</filename>
             </para>
             <para><emphasis role="bold">Fail:</emphasis> If
             <option>admin_token</option> under [DEFAULT] section is set
             and AdminTokenAuthMiddleware exists in
             <filename>keystone-paste.ini</filename>.
             </para>
        </section>
</section>
