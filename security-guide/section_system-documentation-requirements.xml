<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="system-documentation-requirements">
  <?dbhtml stop-chunking?>
  <title>System documentation requirements</title>
  <para>The system documentation for an OpenStack cloud deployment
    should follow the templates and best practices for the Enterprise
    Information Technology System in your organization. Organizations
    often have compliance requirements which may require an overall
    System Security Plan to inventory and document the architecture of
    a given system. There are common challenges across the industry
    related to documenting the dynamic cloud infrastructure and
    keeping the information up-to-date.</para>
  <section xml:id="system-documentation-requirements-system-roles-and-types">
    <title>System roles and types</title>
    <para>The two broadly defined types of
      nodes that generally make up an OpenStack installation are:</para>
    <itemizedlist>
      <listitem>
        <para>Infrastructure nodes. The nodes that run the cloud
          related services such as the OpenStack Identity Service, the
          message queuing service, storage, networking, and other
          services required to support the operation of the
          cloud.</para>
      </listitem>
      <listitem>
        <para>Compute, storage, or other
          resource nodes. Provide storage capacity or
          virtual machines for your cloud.</para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="system-documentation-requirements-system-inventory">
    <title>System inventory</title>
    <para>Documentation should provide a general description of the
      OpenStack environment and cover all systems used (production,
      development, test, etc.). Documenting system components,
      networks, services, and software often provides the bird's-eye
      view needed to thoroughly cover and consider security concerns,
      attack vectors and possible security domain bridging points. A
      system inventory may need to capture ephemeral resources such as
      virtual machines or virtual disk volumes that would otherwise be
      persistent resources in a traditional IT system.</para>
    <section xml:id="system-documentation-requirements-system-inventory-hardware-inventory">
      <title>Hardware inventory</title>
      <para>Clouds without stringent compliance requirements for
        written documentation might benefit from having a
        Configuration Management Database
        (<glossterm>CMDB</glossterm>). CMDBs are normally used for
        hardware asset tracking and overall life-cycle management. By
        leveraging a CMDB, an organization can quickly identify cloud
        infrastructure hardware. For example, compute nodes, storage
        nodes, and network devices that exist on the network but that might
        not be adequately protected and/or forgotten. An OpenStack
        provisioning system can provide some basic CMDB functions if the
        underlying hardware supports the necessary auto-discovery features.</para>
    </section>
    <section xml:id="system-documentation-requirements-system-inventory-software-inventory">
      <title>Software inventory</title>
      <para>Just as with hardware, all software components within the
        OpenStack deployment should be documented. Components here
        should include system databases; OpenStack software components
        and supporting sub-components; and, supporting infrastructure
        software such as load-balancers, reverse proxies, and network
        address translators. Having an authoritative list like this
        may be critical toward understanding total system impact due
        to a compromise or vulnerability of a specific class of
        software.</para>
    </section>
  </section>
  <section xml:id="system-documentation-requirements-network-topology">
    <title>Network topology</title>
    <para>A network topology should be provided with highlights
      specifically calling out the data flows and bridging points
      between the security domains. Network ingress and egress points
      should be identified along with any OpenStack logical system
      boundaries. Multiple diagrams may be needed to provide complete
      visual coverage of the system. A network topology document
      should include virtual networks created on behalf of tenants by
      the system along with virtual machine instances and gateways
      created by OpenStack.</para>
  </section>
  <section xml:id="system-documentation-requirements-services-protocols-and-ports">
    <title>Services, protocols and ports</title>
    <para>The service, protocols and ports table provides important
      additional detail of an OpenStack deployment. A table view of
      all services running within the cloud infrastructure can
      immediately inform, guide, and help check security procedures.
      Firewall configuration, service port conflicts, security
      remediation areas, and compliance requirements become easier to
      manage when you have concise information available. Consider the
      following table:</para>
    <para><inlinemediaobject>
        <imageobject role="html">
          <imagedata contentdepth="166" contentwidth="967"
            fileref="static/services-protocols-ports.png" format="PNG"
            scalefit="1"/>
        </imageobject>
        <imageobject role="fo">
          <imagedata contentdepth="100%"
            fileref="static/services-protocols-ports.png" format="PNG"
            scalefit="1" width="100%"/>
        </imageobject>
      </inlinemediaobject></para>
    <para>Referencing a table of services, protocols and ports can
      help in understanding the relationship between OpenStack
      components. It is highly recommended that OpenStack deployments
      have information similar to this on record.</para>
  </section>
</section>
